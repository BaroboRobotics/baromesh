import "nanopb.proto";
import "rpc.proto";
package barobo;

message SerialId {
    required string value = 1 [(nanopb).max_size = 5];
}

message Payload {
    required bytes value = 1 [(nanopb).max_size = 128];
}

// Can be part of a RadioBroadcastMessage, or part of the Daemon interface
// broadcasts.
enum RobotPowerEvent {
	OFF = 0;
	ON = 1;
}

message MulticastRpcRequest {
	repeated SerialId destinations = 1 [(nanopb).max_count = 8];

	// To access destinations:
	// for (auto i = 0; i < self.destinations_count; ++i) {
	//     // self.destinations[i] is a null-terminated char[5]
	// }

	required barobo.rpc.Request request = 2;
}

// Can be broadcast over the radio from either a dongle or a robot.
message RadioBroadcastMessage {
	enum Type {
		ROBOT_POWER_EVENT = 0;
		MULTICAST_RPC_REQUEST = 1;
	}

	required Type type = 1;
	optional RobotPowerEvent robotPowerEvent = 2;
	optional MulticastRpcRequest multicastRpcRequest = 3;
}