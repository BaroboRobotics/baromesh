!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AsyncRequestManager	../include/rpc/asyncproxy.hpp	/^class AsyncRequestManager {$/;"	c	namespace:rpc
BUFFER_OVERFLOW	../include/rpc/status.hpp	/^    BUFFER_OVERFLOW         = barobo_rpc_Status_BUFFER_OVERFLOW,$/;"	m	class:rpc::Status
Buffer	../include/rpc/buffer.hpp	/^struct Buffer {$/;"	s	namespace:rpc
CONNECTEDRPCOBJECT_HPP	connectedrpcobject.hpp	2;"	d
ConnectedRpcObject	connectedrpcobject.hpp	/^    ConnectedRpcObject ()$/;"	f	class:ConnectedRpcObject
ConnectedRpcObject	connectedrpcobject.hpp	/^class ConnectedRpcObject {$/;"	c
DECODING_FAILURE	../include/rpc/status.hpp	/^    DECODING_FAILURE        = barobo_rpc_Status_DECODING_FAILURE,$/;"	m	class:rpc::Status
ENCODING_FAILURE	../include/rpc/status.hpp	/^    ENCODING_FAILURE        = barobo_rpc_Status_ENCODING_FAILURE,$/;"	m	class:rpc::Status
EnableIf	../include/rpc/enableif.hpp	/^struct EnableIf { };$/;"	s	namespace:rpc
EnableIf	../include/rpc/enableif.hpp	/^struct EnableIf<true, T> { using type = T; };$/;"	s	namespace:rpc
Error	../include/rpc/error.hpp	/^    explicit Error (const std::string& what)$/;"	f	struct:rpc::Error
Error	../include/rpc/error.hpp	/^struct Error : std::runtime_error {$/;"	s	namespace:rpc
FULLDUPLEXTRANSPORT_HPP	fullduplextransport.hpp	2;"	d
FullDuplexTransport	fullduplextransport.hpp	/^    FullDuplexTransport ()$/;"	f	class:FullDuplexTransport
FullDuplexTransport	fullduplextransport.hpp	/^class FullDuplexTransport {$/;"	c
Host	../src/is_base_of.hpp	/^    struct Host {$/;"	s	struct:is_base_of
ILLEGAL_OPERATION	../include/rpc/status.hpp	/^    ILLEGAL_OPERATION       = barobo_rpc_Status_ILLEGAL_OPERATION,$/;"	m	class:rpc::Status
INCONSISTENT_REPLY	../include/rpc/status.hpp	/^    INCONSISTENT_REPLY      = barobo_rpc_Status_INCONSISTENT_REPLY,$/;"	m	class:rpc::Status
INCONSISTENT_REQUEST	../include/rpc/status.hpp	/^    INCONSISTENT_REQUEST    = barobo_rpc_Status_INCONSISTENT_REQUEST,$/;"	m	class:rpc::Status
IS_BASE_OF_HPP	../src/is_base_of.hpp	2;"	d
ITEM	../src/status.cpp	25;"	d	file:
ITEM	../src/status.cpp	6;"	d	file:
IsAttribute	../include/rpc/componenttraits.hpp	/^struct IsAttribute { constexpr static const bool value = false; };$/;"	s	namespace:rpc
IsBroadcast	../include/rpc/componenttraits.hpp	/^struct IsBroadcast { constexpr static const bool value = false; };$/;"	s	namespace:rpc
IsComponent	../include/rpc/componenttraits.hpp	/^struct IsComponent {$/;"	s	namespace:rpc
IsMethod	../include/rpc/componenttraits.hpp	/^struct IsMethod { constexpr static const bool value = false; };$/;"	s	namespace:rpc
IsSettableAttribute	../include/rpc/componenttraits.hpp	/^struct IsSettableAttribute { constexpr static const bool value = false; };$/;"	s	namespace:rpc
IsSubscribableAttribute	../include/rpc/componenttraits.hpp	/^struct IsSubscribableAttribute { constexpr static const bool value = false; };$/;"	s	namespace:rpc
MethodOutputVariant	../include/rpc/variant.hpp	/^    MethodOutputVariant (T t) : mVariant(t) { }$/;"	f	class:rpc::MethodOutputVariant
MethodOutputVariant	../include/rpc/variant.hpp	/^class MethodOutputVariant {$/;"	c	namespace:rpc
NO_SUBSCRIPTIONS	../include/rpc/status.hpp	/^    NO_SUBSCRIPTIONS        = barobo_rpc_Status_NO_SUBSCRIPTIONS,$/;"	m	class:rpc::Status
NO_SUCH_COMPONENT	../include/rpc/status.hpp	/^    NO_SUCH_COMPONENT       = barobo_rpc_Status_NO_SUCH_COMPONENT,$/;"	m	class:rpc::Status
OK	../include/rpc/status.hpp	/^    OK                      = barobo_rpc_Status_OK,$/;"	m	class:rpc::Status
ONLY_IF	../include/rpc/enableif.hpp	15;"	d
PotQueue	../include/rpc/potqueue.hpp	/^class PotQueue {$/;"	c	namespace:rpc
PotRingbuffer	../include/rpc/potringbuffer.hpp	/^class PotRingbuffer {$/;"	c	namespace:rpc
Proxy	../include/rpc/proxy.hpp	/^class Proxy {$/;"	c	namespace:rpc
READONLY	../include/rpc/status.hpp	/^    READONLY                = barobo_rpc_Status_READONLY,$/;"	m	class:rpc::Status
RPCDEF_Attribute	../include/rpc/def.hpp	230;"	d
RPCDEF_Broadcast	../include/rpc/def.hpp	323;"	d
RPCDEF_BroadcastInvoker	../include/rpc/def.hpp	520;"	d
RPCDEF_CPP	../include/rpc/def.hpp	568;"	d
RPCDEF_ComponentId	../include/rpc/def.hpp	391;"	d
RPCDEF_ComponentInUnion	../include/rpc/def.hpp	342;"	d
RPCDEF_ComponentResultUnion	../include/rpc/def.hpp	352;"	d
RPCDEF_FWD_DECL_INTERFACE	../include/rpc/def.hpp	211;"	d
RPCDEF_FWD_DECL_isComponentFunctions	../include/rpc/def.hpp	192;"	d
RPCDEF_FireInvoker	../include/rpc/def.hpp	494;"	d
RPCDEF_FulfillInvoker	../include/rpc/def.hpp	546;"	d
RPCDEF_GetInvoker	../include/rpc/def.hpp	442;"	d
RPCDEF_HPP	../include/rpc/def.hpp	583;"	d
RPCDEF_IsAttribute	../include/rpc/def.hpp	263;"	d
RPCDEF_IsBroadcast	../include/rpc/def.hpp	331;"	d
RPCDEF_IsMethod	../include/rpc/def.hpp	313;"	d
RPCDEF_IsSettableAttribute	../include/rpc/def.hpp	268;"	d
RPCDEF_IsSubscribableAttribute	../include/rpc/def.hpp	273;"	d
RPCDEF_MethodIn	../include/rpc/def.hpp	284;"	d
RPCDEF_MethodResult	../include/rpc/def.hpp	292;"	d
RPCDEF_PromiseVariadic	../include/rpc/def.hpp	369;"	d
RPCDEF_ResultOf	../include/rpc/def.hpp	306;"	d
RPCDEF_SetInvoker	../include/rpc/def.hpp	468;"	d
RPCDEF_Subscriptions	../include/rpc/def.hpp	428;"	d
RPCDEF_Version	../include/rpc/def.hpp	184;"	d
RPCDEF_componentId	../include/rpc/def.hpp	417;"	d
RPCDEF_decodeBroadcastPayload	../include/rpc/def.hpp	111;"	d
RPCDEF_decodeFirePayload	../include/rpc/def.hpp	96;"	d
RPCDEF_decodeResultPayload	../include/rpc/def.hpp	129;"	d
RPCDEF_decodeSetPayload	../include/rpc/def.hpp	78;"	d
RPCDEF_getSubscriptionRecord	../include/rpc/def.hpp	150;"	d
RPCDEF_isAttribute	../include/rpc/def.hpp	64;"	d
RPCDEF_isAttributeMethodOrBroadcast	../include/rpc/def.hpp	52;"	d
RPCDEF_isBroadcast	../include/rpc/def.hpp	68;"	d
RPCDEF_isMethod	../include/rpc/def.hpp	66;"	d
RPCDEF_pbFields_attributes	../include/rpc/def.hpp	35;"	d
RPCDEF_pbFields_broadcasts	../include/rpc/def.hpp	44;"	d
RPCDEF_pbFields_methods	../include/rpc/def.hpp	38;"	d
RPC_ASYNCPROXY_HPP	../include/rpc/asyncproxy.hpp	2;"	d
RPC_BUFFER_HPP	../include/rpc/buffer.hpp	2;"	d
RPC_CHECKVERSION_HPP	../include/rpc/checkversion.hpp	2;"	d
RPC_COMPONENTTRAITS_HPP	../include/rpc/componenttraits.hpp	2;"	d
RPC_DEF_HPP	../include/rpc/def.hpp	2;"	d
RPC_ENABLEIF_HPP	../include/rpc/enableif.hpp	2;"	d
RPC_ERROR_HPP	../include/rpc/error.hpp	2;"	d
RPC_HASH_HPP	../include/rpc/hash.hpp	2;"	d
RPC_MESSAGE_HPP	../include/rpc/message.hpp	2;"	d
RPC_MESSAGE_MAX_SIZE	../include/rpc/message.hpp	11;"	d
RPC_POTQUEUE_HPP	../include/rpc/potqueue.hpp	2;"	d
RPC_POTRINGBUFFER_HPP	../include/rpc/potringbuffer.hpp	2;"	d
RPC_PROXY_HPP	../include/rpc/proxy.hpp	2;"	d
RPC_SERVICE_HPP	../include/rpc/service.hpp	2;"	d
RPC_STATUS_HPP	../include/rpc/status.hpp	2;"	d
RPC_STDLIBHEADERS_HPP	../include/rpc/stdlibheaders.hpp	2;"	d
RPC_TESTS_WIDGETIMPL_HPP	widgetimpl.hpp	2;"	d
RPC_VARIANT_HPP	../include/rpc/variant.hpp	2;"	d
RPC_VERSION_MAJOR	../include/rpc/checkversion.hpp	9;"	d
RPC_VERSION_MINOR	../include/rpc/checkversion.hpp	10;"	d
RPC_VERSION_PATCH	../include/rpc/checkversion.hpp	11;"	d
Service	../include/rpc/service.hpp	/^class Service {$/;"	c	namespace:rpc
SetExceptionVisitor	../include/rpc/asyncproxy.hpp	/^        explicit SetExceptionVisitor (Status status) : mStatus(status) { }$/;"	f	struct:rpc::AsyncRequestManager::SetExceptionVisitor
SetExceptionVisitor	../include/rpc/asyncproxy.hpp	/^    struct SetExceptionVisitor : boost::static_visitor<> {$/;"	s	class:rpc::AsyncRequestManager
Status	../include/rpc/status.hpp	/^enum class Status {$/;"	c	namespace:rpc
TYPE_OTHER	../include/rpc/variant.hpp	/^        TYPE_OTHER$/;"	e	enum:rpc::Variant::TypeCode
TYPE_T	../include/rpc/variant.hpp	/^        TYPE_T,$/;"	e	enum:rpc::Variant::TypeCode
TYPE_U	../include/rpc/variant.hpp	/^        TYPE_U,$/;"	e	enum:rpc::Variant::TypeCode
TypeCode	../include/rpc/variant.hpp	/^    enum TypeCode {$/;"	g	class:rpc::Variant
UNSOLICITED_RESULT	../include/rpc/status.hpp	/^    UNSOLICITED_RESULT,$/;"	m	class:rpc::Status
VERSION_MISMATCH	../include/rpc/status.hpp	/^    VERSION_MISMATCH        = barobo_rpc_Status_VERSION_MISMATCH,$/;"	m	class:rpc::Status
Variant	../include/rpc/variant.hpp	/^    Variant (V v) {$/;"	f	class:rpc::Variant
Variant	../include/rpc/variant.hpp	/^class Variant {$/;"	c	namespace:rpc
WidgetProxy	widgetimpl.hpp	/^    WidgetProxy (std::function<void(const BufferType&)> postFunc) : mPostFunc(postFunc) { }$/;"	f	class:WidgetProxy
WidgetProxy	widgetimpl.hpp	/^class WidgetProxy : public rpc::AsyncProxy<WidgetProxy, barobo::Widget> {$/;"	c
WidgetService	widgetimpl.hpp	/^    WidgetService (std::function<void(const BufferType&)> postFunc) : mPostFunc(postFunc) { }$/;"	f	class:WidgetService
WidgetService	widgetimpl.hpp	/^class WidgetService : public rpc::Service<WidgetService, barobo::Widget> {$/;"	c
activateSubscription	../include/rpc/componenttraits.hpp	/^Status activateSubscription (Subscriptions<Interface>& subs, uint32_t id) {$/;"	f	namespace:rpc
add	../include/rpc/potringbuffer.hpp	/^    void add (size_t& beginOrEnd, size_t amount) {$/;"	f	class:rpc::PotRingbuffer
add_prefix	../include/rpc/def.hpp	33;"	d
add_suffix	../include/rpc/def.hpp	32;"	d
at	../include/rpc/potringbuffer.hpp	/^    T& at (size_t index) {$/;"	f	class:rpc::PotRingbuffer
attribute	widgetimpl.hpp	/^    Attribute::attribute attribute = { 13 };$/;"	m	class:WidgetService
back	../include/rpc/potringbuffer.hpp	/^    T& back () {$/;"	f	class:rpc::PotRingbuffer
barobo_Widget_INTERFACE	gen-widget.pb.hpp	2;"	d
broadcast	../include/rpc/proxy.hpp	/^    void broadcast (C args, ONLY_IF(IsSubscribableAttribute<C>::value || IsBroadcast<C>::value)) {$/;"	f	class:rpc::Proxy
broadcast	../include/rpc/service.hpp	/^    Status broadcast (C args, ONLY_IF(IsSubscribableAttribute<C>::value || IsBroadcast<C>::value)) {$/;"	f	class:rpc::Service
broadcastedAttribute	widgetimpl.hpp	/^    Attribute::attribute broadcastedAttribute () const {$/;"	f	class:WidgetProxy
broadcastedBroadcast	widgetimpl.hpp	/^    Broadcast::broadcast broadcastedBroadcast () const {$/;"	f	class:WidgetProxy
broadcastedReadonlyAttribute	widgetimpl.hpp	/^    Attribute::readonlyAttribute broadcastedReadonlyAttribute () const {$/;"	f	class:WidgetProxy
bytes	../include/rpc/buffer.hpp	/^    uint8_t bytes[N];$/;"	m	struct:rpc::Buffer
checkInterfaceVersion	../include/rpc/checkversion.hpp	/^bool checkInterfaceVersion (const barobo_rpc_VersionTriplet& version) {$/;"	f	namespace:rpc
checkRpcVersion	../include/rpc/checkversion.hpp	/^static inline bool checkRpcVersion (const barobo_rpc_VersionTriplet& version) {$/;"	f	namespace:rpc
comboAt	../include/rpc/potringbuffer.hpp	/^    T& comboAt (size_t index) {$/;"	f	class:rpc::PotRingbuffer
deactivateSubscription	../include/rpc/componenttraits.hpp	/^Status deactivateSubscription (Subscriptions<Interface>& subs, uint32_t id) {$/;"	f	namespace:rpc
decode	../include/rpc/message.hpp	/^Status decode (T& message, uint8_t* bytes, size_t size) {$/;"	f	namespace:rpc
decodeProtobuf	../src/message.cpp	/^Status decodeProtobuf (void* pbStruct, const pb_field_t* pbFields, uint8_t* bytes, size_t size) {$/;"	f	namespace:rpc
decr	../include/rpc/potringbuffer.hpp	/^    void decr (size_t& beginOrEnd) {$/;"	f	class:rpc::PotRingbuffer
deliver	../include/rpc/proxy.hpp	/^    Status deliver (BufferType buffer) {$/;"	f	class:rpc::Proxy
deliver	../include/rpc/service.hpp	/^    Status deliver (BufferType in) {$/;"	f	class:rpc::Service
empty	../include/rpc/potqueue.hpp	/^    bool empty () const { return mRingbuffer.empty(); }$/;"	f	class:rpc::PotQueue
empty	../include/rpc/potringbuffer.hpp	/^    bool empty () const {$/;"	f	class:rpc::PotRingbuffer
enclose_with_namespace	../include/rpc/def.hpp	203;"	d
encode	../include/rpc/message.hpp	/^Status encode (const T& message, uint8_t* bytes, size_t size, size_t& bytesWritten) {$/;"	f	namespace:rpc
encodeProtobuf	../src/message.cpp	/^Status encodeProtobuf (const void* pbStruct, const pb_field_t* pbFields, uint8_t* bytes, size_t size, size_t& bytesWritten) {$/;"	f	namespace:rpc
finalize	../include/rpc/asyncproxy.hpp	/^    Future<C> finalize (uint32_t requestId) {$/;"	f	class:rpc::AsyncRequestManager
finalize	../include/rpc/asyncproxy.hpp	/^    Future<C> finalize (uint32_t requestId, Status status) {$/;"	f	class:rpc::AsyncRequestManager
fire	../include/rpc/proxy.hpp	/^    Future<typename ResultOf<MethodIn>::type> fire (MethodIn args, ONLY_IF(IsMethod<MethodIn>::value)) {$/;"	f	class:rpc::Proxy
fire	../include/rpc/service.hpp	/^    typename ResultOf<Method>::type fire (Method args, ONLY_IF(IsMethod<Method>::value)) {$/;"	f	class:rpc::Service
front	../include/rpc/potqueue.hpp	/^    T& front () { return mRingbuffer.front(); }$/;"	f	class:rpc::PotQueue
front	../include/rpc/potringbuffer.hpp	/^    T& front () {$/;"	f	class:rpc::PotRingbuffer
fulfill	../include/rpc/asyncproxy.hpp	/^    Status fulfill (uint32_t requestId, C result) {$/;"	f	class:rpc::AsyncRequestManager
fulfill	../include/rpc/asyncproxy.hpp	/^    Status fulfill (uint32_t requestId, Status status) {$/;"	f	class:rpc::AsyncRequestManager
full	../include/rpc/potqueue.hpp	/^    bool full () const { return mRingbuffer.full(); }$/;"	f	class:rpc::PotQueue
full	../include/rpc/potringbuffer.hpp	/^    bool full () const {$/;"	f	class:rpc::PotRingbuffer
get	../include/rpc/proxy.hpp	/^    Future<Attribute> get (Attribute, ONLY_IF(IsAttribute<Attribute>::value)) {$/;"	f	class:rpc::Proxy
get	../include/rpc/service.hpp	/^    Attribute get (Attribute args, ONLY_IF(IsAttribute<Attribute>::value)) {$/;"	f	class:rpc::Service
get	../include/rpc/variant.hpp	/^    void get () {$/;"	f	class:rpc::Variant
getError	../include/rpc/variant.hpp	/^    E& getError () {$/;"	f	class:rpc::MethodOutputVariant
getOut	../include/rpc/variant.hpp	/^    O& getOut () {$/;"	f	class:rpc::MethodOutputVariant
hasError	../include/rpc/status.hpp	/^static inline bool hasError (Status s) {$/;"	f	namespace:rpc
hash	../include/rpc/hash.hpp	/^constexpr uint32_t hash (const char (&s)[N], uint32_t seed = 0, size_t i = 0) {$/;"	f	namespace:rpc
incr	../include/rpc/potringbuffer.hpp	/^    void incr (size_t& beginOrEnd) {$/;"	f	class:rpc::PotRingbuffer
intercalate_scope	../include/rpc/def.hpp	176;"	d
invokeBroadcast	../include/rpc/componenttraits.hpp	/^Status invokeBroadcast (T& proxy,$/;"	f	namespace:rpc
invokeFire	../include/rpc/componenttraits.hpp	/^Status invokeFire (T& service,$/;"	f	namespace:rpc
invokeFulfill	../include/rpc/componenttraits.hpp	/^Status invokeFulfill(T& proxy,$/;"	f	namespace:rpc
invokeGet	../include/rpc/componenttraits.hpp	/^Status invokeGet (T& service,$/;"	f	namespace:rpc
invokeSet	../include/rpc/componenttraits.hpp	/^Status invokeSet (T& service,$/;"	f	namespace:rpc
isA	../include/rpc/variant.hpp	/^    bool isA () const {$/;"	f	class:rpc::Variant
isComponent	../include/rpc/componenttraits.hpp	/^bool isComponent (uint32_t id) {$/;"	f	namespace:rpc
isError	../include/rpc/variant.hpp	/^    bool isError () const {$/;"	f	class:rpc::MethodOutputVariant
isOut	../include/rpc/variant.hpp	/^    bool isOut () const {$/;"	f	class:rpc::MethodOutputVariant
is_base_of	../src/is_base_of.hpp	/^struct is_base_of {$/;"	s
mBegin	../include/rpc/potringbuffer.hpp	/^    size_t mBegin = 0;$/;"	m	class:rpc::PotRingbuffer
mBroadcastedAttribute	widgetimpl.hpp	/^    Attribute::attribute mBroadcastedAttribute;$/;"	m	class:WidgetProxy
mBroadcastedBroadcast	widgetimpl.hpp	/^    Broadcast::broadcast mBroadcastedBroadcast;$/;"	m	class:WidgetProxy
mBroadcastedReadonlyAttribute	widgetimpl.hpp	/^    Attribute::readonlyAttribute mBroadcastedReadonlyAttribute;$/;"	m	class:WidgetProxy
mData	../include/rpc/potringbuffer.hpp	/^    T mData[N];$/;"	m	class:rpc::PotRingbuffer
mEnd	../include/rpc/potringbuffer.hpp	/^    size_t mEnd = 0;$/;"	m	class:rpc::PotRingbuffer
mKillThreads	fullduplextransport.hpp	/^    std::atomic_bool mKillThreads = { false };$/;"	m	class:FullDuplexTransport
mNextRequestId	../include/rpc/asyncproxy.hpp	/^    std::atomic<uint32_t> mNextRequestId = { 0 };$/;"	m	class:rpc::AsyncRequestManager
mPostFunc	widgetimpl.hpp	/^    std::function<void(const BufferType&)> mPostFunc;$/;"	m	class:WidgetProxy
mPostFunc	widgetimpl.hpp	/^    std::function<void(const BufferType&)> mPostFunc;$/;"	m	class:WidgetService
mPromises	../include/rpc/asyncproxy.hpp	/^        > mPromises;$/;"	m	class:rpc::AsyncRequestManager
mPromisesMutex	../include/rpc/asyncproxy.hpp	/^    std::mutex mPromisesMutex;$/;"	m	class:rpc::AsyncRequestManager
mProxy	connectedrpcobject.hpp	/^    P mProxy;$/;"	m	class:ConnectedRpcObject
mProxyToServiceThread	fullduplextransport.hpp	/^    std::thread mProxyToServiceThread;$/;"	m	class:FullDuplexTransport
mReplyHandler	fullduplextransport.hpp	/^    std::function<void(const rpc::Buffer<256>&)> mReplyHandler;$/;"	m	class:FullDuplexTransport
mRequestHandler	fullduplextransport.hpp	/^    std::function<void(const rpc::Buffer<256>&)> mRequestHandler;$/;"	m	class:FullDuplexTransport
mRequestManager	../include/rpc/proxy.hpp	/^    RequestManager<Interface> mRequestManager;$/;"	m	class:rpc::Proxy
mRingbuffer	../include/rpc/potqueue.hpp	/^    PotRingbuffer<T, N> mRingbuffer;$/;"	m	class:rpc::PotQueue
mService	connectedrpcobject.hpp	/^    S mService;$/;"	m	class:ConnectedRpcObject
mServiceToProxyQueue	fullduplextransport.hpp	/^    Queue mServiceToProxyQueue;$/;"	m	class:FullDuplexTransport
mServiceToProxyThread	fullduplextransport.hpp	/^    std::thread mServiceToProxyThread;$/;"	m	class:FullDuplexTransport
mStatus	../include/rpc/asyncproxy.hpp	/^        Status mStatus;$/;"	m	struct:rpc::AsyncRequestManager::SetExceptionVisitor
mSubscriptions	../include/rpc/service.hpp	/^    Subscriptions<Interface> mSubscriptions;$/;"	m	class:rpc::Service
mTransport	connectedrpcobject.hpp	/^    FullDuplexTransport mTransport;$/;"	m	class:ConnectedRpcObject
mTypeCode	../include/rpc/variant.hpp	/^    TypeCode mTypeCode;$/;"	m	class:rpc::Variant
mValue	../include/rpc/variant.hpp	/^    } mValue;$/;"	m	class:rpc::Variant	typeref:union:rpc::Variant::__anon1
mVariant	../include/rpc/variant.hpp	/^    Variant<O, E> mVariant;$/;"	m	class:rpc::MethodOutputVariant
main	broadcast-attribute.cpp	/^int main () {$/;"	f
main	broadcast-broadcast.cpp	/^int main () {$/;"	f
main	fire-method.cpp	/^int main () {$/;"	f
main	get-attribute.cpp	/^int main () {$/;"	f
main	set-attribute.cpp	/^int main () {$/;"	f
makeBroadcast	../src/message.cpp	/^Status makeBroadcast (uint8_t* bytes, size_t& size, uint32_t componentId, const pb_field_t* fields, void* payload) {$/;"	f	namespace:rpc
makeFire	../src/message.cpp	/^Status makeFire (uint8_t* bytes, size_t& size, uint32_t requestId, uint32_t componentId, const pb_field_t* fields, void* payload) {$/;"	f	namespace:rpc
makeGet	../src/message.cpp	/^Status makeGet (uint8_t* bytes, size_t& size, uint32_t requestId,$/;"	f	namespace:rpc
makeSet	../src/message.cpp	/^Status makeSet (uint8_t* bytes, size_t& size, uint32_t requestId,$/;"	f	namespace:rpc
makeSubscribe	../src/message.cpp	/^Status makeSubscribe (uint8_t* bytes, size_t& size, uint32_t requestId,$/;"	f	namespace:rpc
makeUnsubscribe	../src/message.cpp	/^Status makeUnsubscribe (uint8_t* bytes, size_t& size, uint32_t requestId,$/;"	f	namespace:rpc
nextRequestId	../include/rpc/asyncproxy.hpp	/^    uint32_t nextRequestId () {$/;"	f	class:rpc::AsyncRequestManager
no	../src/is_base_of.hpp	/^    typedef char (&no)[2];$/;"	t	struct:is_base_of
noSubscriptionsAttribute	widgetimpl.hpp	/^    Attribute::noSubscriptionsAttribute noSubscriptionsAttribute = { 13 };$/;"	m	class:WidgetService
onBroadcast	widgetimpl.hpp	/^    void onBroadcast (Attribute::attribute args) {$/;"	f	class:WidgetProxy
onBroadcast	widgetimpl.hpp	/^    void onBroadcast (Attribute::readonlyAttribute args) {$/;"	f	class:WidgetProxy
onBroadcast	widgetimpl.hpp	/^    void onBroadcast (Broadcast::broadcast args) {$/;"	f	class:WidgetProxy
onFire	widgetimpl.hpp	/^    MethodResult::nullaryNoResult onFire (MethodIn::nullaryNoResult) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::nullaryWithResult onFire (MethodIn::nullaryWithResult) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::nullaryWithResultError onFire (MethodIn::nullaryWithResultError) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::nullaryWithResultOut onFire (MethodIn::nullaryWithResultOut) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::unaryNoResult onFire (MethodIn::unaryNoResult args) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::unaryWithResult onFire (MethodIn::unaryWithResult args) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::unaryWithResultError onFire (MethodIn::unaryWithResultError args) {$/;"	f	class:WidgetService
onFire	widgetimpl.hpp	/^    MethodResult::unaryWithResultOut onFire (MethodIn::unaryWithResultOut args) {$/;"	f	class:WidgetService
onGet	widgetimpl.hpp	/^    Attribute::attribute onGet (Attribute::attribute) {$/;"	f	class:WidgetService
onGet	widgetimpl.hpp	/^    Attribute::noSubscriptionsAttribute onGet (Attribute::noSubscriptionsAttribute) {$/;"	f	class:WidgetService
onGet	widgetimpl.hpp	/^    Attribute::readonlyAttribute onGet (Attribute::readonlyAttribute) {$/;"	f	class:WidgetService
onGet	widgetimpl.hpp	/^    Attribute::readonlyNoSubscriptionsAttribute onGet (Attribute::readonlyNoSubscriptionsAttribute) {$/;"	f	class:WidgetService
onReply	fullduplextransport.hpp	/^    void onReply (std::function<void(const rpc::Buffer<256>&)> handler) {$/;"	f	class:FullDuplexTransport
onRequest	fullduplextransport.hpp	/^    void onRequest (std::function<void(const rpc::Buffer<256>&)> handler) {$/;"	f	class:FullDuplexTransport
onSet	widgetimpl.hpp	/^    void onSet (Attribute::attribute args) {$/;"	f	class:WidgetService
onSet	widgetimpl.hpp	/^    void onSet (Attribute::noSubscriptionsAttribute args) {$/;"	f	class:WidgetService
operator ()	../include/rpc/asyncproxy.hpp	/^        void operator() (P& promise) const {$/;"	f	struct:rpc::AsyncRequestManager::SetExceptionVisitor
pbFields	../src/message.cpp	/^const pb_field_t* pbFields (barobo_rpc_Reply) {$/;"	f	namespace:rpc
pbFields	../src/message.cpp	/^const pb_field_t* pbFields (barobo_rpc_Request) {$/;"	f	namespace:rpc
pop	../include/rpc/potqueue.hpp	/^    void pop () { mRingbuffer.popFront(); }$/;"	f	class:rpc::PotQueue
popBack	../include/rpc/potringbuffer.hpp	/^    void popBack () {$/;"	f	class:rpc::PotRingbuffer
popFront	../include/rpc/potringbuffer.hpp	/^    void popFront () {$/;"	f	class:rpc::PotRingbuffer
post	widgetimpl.hpp	/^    void post (const BufferType& buffer) {$/;"	f	class:WidgetProxy
post	widgetimpl.hpp	/^    void post (const BufferType& buffer) {$/;"	f	class:WidgetService
proxy	connectedrpcobject.hpp	/^    P& proxy () { return mProxy; }$/;"	f	class:ConnectedRpcObject
proxyToService	fullduplextransport.hpp	/^    void proxyToService () {$/;"	f	class:FullDuplexTransport
push	../include/rpc/potqueue.hpp	/^    void push (const T& elem) { mRingbuffer.pushBack(elem); }$/;"	f	class:rpc::PotQueue
pushBack	../include/rpc/potringbuffer.hpp	/^    void pushBack (const T& elem) {$/;"	f	class:rpc::PotRingbuffer
pushFront	../include/rpc/potringbuffer.hpp	/^    void pushFront (const T& elem) {$/;"	f	class:rpc::PotRingbuffer
rcpdef_append	../include/rpc/def.hpp	220;"	d
readonlyAttribute	widgetimpl.hpp	/^    Attribute::readonlyAttribute readonlyAttribute = { 13 };$/;"	m	class:WidgetService
readonlyNoSubscriptionsAttribute	widgetimpl.hpp	/^    Attribute::readonlyNoSubscriptionsAttribute readonlyNoSubscriptionsAttribute = { 13 };$/;"	m	class:WidgetService
replyPoster	fullduplextransport.hpp	/^    replyPoster () {$/;"	f	class:FullDuplexTransport
requestPoster	fullduplextransport.hpp	/^    requestPoster () {$/;"	f	class:FullDuplexTransport
reverseAt	../include/rpc/potringbuffer.hpp	/^    T& reverseAt (size_t index) {$/;"	f	class:rpc::PotRingbuffer
rpc	../include/rpc/asyncproxy.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/buffer.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/checkversion.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/componenttraits.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/enableif.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/error.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/hash.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/message.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/potqueue.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/potringbuffer.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/proxy.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/service.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/status.hpp	/^namespace rpc {$/;"	n
rpc	../include/rpc/variant.hpp	/^namespace rpc {$/;"	n
rpc	../src/message.cpp	/^namespace rpc {$/;"	n	file:
rpc	../src/status.cpp	/^namespace rpc {$/;"	n	file:
rpcdef_attribute_componentId	../include/rpc/def.hpp	408;"	d
rpcdef_broadcast_componentId	../include/rpc/def.hpp	414;"	d
rpcdef_case_invoke_broadcast	../include/rpc/def.hpp	514;"	d
rpcdef_case_invoke_fire	../include/rpc/def.hpp	489;"	d
rpcdef_case_invoke_fulfill	../include/rpc/def.hpp	541;"	d
rpcdef_case_invoke_get	../include/rpc/def.hpp	437;"	d
rpcdef_case_invoke_set	../include/rpc/def.hpp	462;"	d
rpcdef_case_subscription_record	../include/rpc/def.hpp	147;"	d
rpcdef_cat_scope	../include/rpc/def.hpp	182;"	d
rpcdef_cat_scope_seq	../include/rpc/def.hpp	178;"	d
rpcdef_decl_attribute_object	../include/rpc/def.hpp	339;"	d
rpcdef_decl_broadcast_object	../include/rpc/def.hpp	350;"	d
rpcdef_decl_method_input_object	../include/rpc/def.hpp	340;"	d
rpcdef_decl_method_output_object	../include/rpc/def.hpp	349;"	d
rpcdef_decodeCase	../include/rpc/def.hpp	74;"	d
rpcdef_define_ResultOf	../include/rpc/def.hpp	300;"	d
rpcdef_define_componentId	../include/rpc/def.hpp	402;"	d
rpcdef_define_subscription	../include/rpc/def.hpp	425;"	d
rpcdef_define_true_metafunc	../include/rpc/def.hpp	238;"	d
rpcdef_fwd_decl_struct_seq	../include/rpc/def.hpp	208;"	d
rpcdef_fwd_decl_struct_seq_rev	../include/rpc/def.hpp	205;"	d
rpcdef_isAttributeMethodOrBroadcast	../include/rpc/def.hpp	49;"	d
rpcdef_join_seq	../include/rpc/def.hpp	216;"	d
rpcdef_make_attribute_struct	../include/rpc/def.hpp	244;"	d
rpcdef_make_broadcast_struct	../include/rpc/def.hpp	250;"	d
rpcdef_make_enum_hash_entry	../include/rpc/def.hpp	388;"	d
rpcdef_make_method_input_struct	../include/rpc/def.hpp	246;"	d
rpcdef_make_method_output_struct	../include/rpc/def.hpp	248;"	d
rpcdef_make_typename_attribute_struct	../include/rpc/def.hpp	253;"	d
rpcdef_make_typename_broadcast_struct	../include/rpc/def.hpp	259;"	d
rpcdef_make_typename_method_input_struct	../include/rpc/def.hpp	255;"	d
rpcdef_make_typename_method_output_struct	../include/rpc/def.hpp	257;"	d
rpcdef_method_componentId	../include/rpc/def.hpp	411;"	d
rpcdef_paste	../include/rpc/def.hpp	215;"	d
rpcdef_pbFields	../include/rpc/def.hpp	26;"	d
rpcdef_underscored_token	../include/rpc/def.hpp	223;"	d
rpcdef_underscored_token_seq	../include/rpc/def.hpp	221;"	d
rpcdef_using	../include/rpc/def.hpp	228;"	d
rpcdef_using_In	../include/rpc/def.hpp	281;"	d
rpcdef_using_Result	../include/rpc/def.hpp	282;"	d
service	connectedrpcobject.hpp	/^    S& service () { return mService; }$/;"	f	class:ConnectedRpcObject
serviceToProxy	fullduplextransport.hpp	/^    void serviceToProxy () {$/;"	f	class:FullDuplexTransport
set	../include/rpc/proxy.hpp	/^    Future<void> set (Attribute args, ONLY_IF(IsSettableAttribute<Attribute>::value)) {$/;"	f	class:rpc::Proxy
set	../include/rpc/service.hpp	/^    void set (Attribute args, ONLY_IF(IsSettableAttribute<Attribute>::value)) {$/;"	f	class:rpc::Service
set	../include/rpc/variant.hpp	/^    void set (T t) {$/;"	f	class:rpc::Variant
set	../include/rpc/variant.hpp	/^    void set (U u) {$/;"	f	class:rpc::Variant
setReadonlyAttribute	widgetimpl.hpp	/^    void setReadonlyAttribute (Attribute::readonlyAttribute val) {$/;"	f	class:WidgetService
size	../include/rpc/buffer.hpp	/^    size_t size;$/;"	m	struct:rpc::Buffer
size	../include/rpc/potringbuffer.hpp	/^    size_t size () const {$/;"	f	class:rpc::PotRingbuffer
statusToString	../src/status.cpp	/^const char* statusToString (Status status) {$/;"	f	namespace:rpc
subscribe	../include/rpc/proxy.hpp	/^    Future<void> subscribe (C, ONLY_IF(IsAttribute<C>::value || IsBroadcast<C>::value)) {$/;"	f	class:rpc::Proxy
subscriptionIsActive	../include/rpc/componenttraits.hpp	/^bool subscriptionIsActive (Subscriptions<Interface>& subs, uint32_t id) {$/;"	f	namespace:rpc
t	../include/rpc/variant.hpp	/^        T t;$/;"	m	union:rpc::Variant::__anon1
tryMakePromise	../include/rpc/asyncproxy.hpp	/^    tryMakePromise (uint32_t requestId) {$/;"	f	class:rpc::AsyncRequestManager
typeCode	../include/rpc/variant.hpp	/^    constexpr static TypeCode typeCode (T) { return TYPE_T; }$/;"	f	class:rpc::Variant
typeCode	../include/rpc/variant.hpp	/^    constexpr static TypeCode typeCode (U) { return TYPE_U; }$/;"	f	class:rpc::Variant
typeCode	../include/rpc/variant.hpp	/^    constexpr static TypeCode typeCode (V) { return TYPE_OTHER; }$/;"	f	class:rpc::Variant
u	../include/rpc/variant.hpp	/^        U u;$/;"	m	union:rpc::Variant::__anon1
unsubscribe	../include/rpc/proxy.hpp	/^    Future<void> unsubscribe (C, ONLY_IF(IsAttribute<C>::value || IsBroadcast<C>::value)) {$/;"	f	class:rpc::Proxy
value	../include/rpc/componenttraits.hpp	/^    constexpr static const bool value =$/;"	m	struct:rpc::IsComponent
value	../include/rpc/componenttraits.hpp	/^struct IsAttribute { constexpr static const bool value = false; };$/;"	m	struct:rpc::IsAttribute
value	../include/rpc/componenttraits.hpp	/^struct IsBroadcast { constexpr static const bool value = false; };$/;"	m	struct:rpc::IsBroadcast
value	../include/rpc/componenttraits.hpp	/^struct IsMethod { constexpr static const bool value = false; };$/;"	m	struct:rpc::IsMethod
value	../include/rpc/componenttraits.hpp	/^struct IsSettableAttribute { constexpr static const bool value = false; };$/;"	m	struct:rpc::IsSettableAttribute
value	../include/rpc/componenttraits.hpp	/^struct IsSubscribableAttribute { constexpr static const bool value = false; };$/;"	m	struct:rpc::IsSubscribableAttribute
value	../src/is_base_of.hpp	/^    static const bool value = sizeof(check(Host<Base,Derived>(), int())) == sizeof(yes);$/;"	m	struct:is_base_of
wrappedAccess	../include/rpc/potringbuffer.hpp	/^    T& wrappedAccess (size_t index) {$/;"	f	class:rpc::PotRingbuffer
yes	../src/is_base_of.hpp	/^    typedef char (&yes)[1];$/;"	t	struct:is_base_of
~FullDuplexTransport	fullduplextransport.hpp	/^    ~FullDuplexTransport () {$/;"	f	class:FullDuplexTransport
